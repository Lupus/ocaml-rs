open! Bigarray
type testing
type testing_callback
type enum1 = Empty | First of int | Second of string array
type struct1 = {a: int; b: float; mutable c: string option; d: string array option;}
external apply1: ('a -> 'b) -> 'a -> 'b = "apply1"
external apply3: ('a -> 'b) -> 'a -> 'b = "apply3"
external apply_range: (int list -> 'a) -> int -> int -> 'a = "apply_range"
external list_length: 'a list -> int = "list_length"
external list_nil: unit -> 'a list = "list_nil"
external list_cons: 'a list -> 'a -> 'a list = "list_cons"
external array_make_range: int -> int -> int array = "array_make_range"
external array_make_range_f: int -> int -> float array = "array_make_range_f"
external array_replace: 'a array -> int -> 'a -> 'a option = "array_replace"
external array1_of_string: string -> (int, int8_unsigned_elt, c_layout) Array1.t = "array1_of_string"
external array1_new: int -> init:int -> (int, int8_unsigned_elt, c_layout) Array1.t = "array1_new"
external array1_from_rust_vec: unit -> (float, float32_elt, c_layout) Array1.t = "array1_from_rust_vec"
external raise_exc: float -> unit = "raise_exc"
external testing_alloc: int64 -> testing = "testing_alloc"
external testing_set_c: testing -> string -> unit = "testing_set_c"
external testing_set_a: testing -> float -> unit = "testing_set_a"
external testing_get_values: testing -> (float * int64 * string) = "testing_get_values"
external testing_callback_alloc: (int -> float) -> testing_callback = "testing_callback_alloc"
external testing_callback_call: testing_callback -> int -> float = "testing_callback_call"
external enum1_empty: unit -> enum1 = "enum1_empty"
external enum1_first: int -> enum1 = "enum1_first"
external enum1_make_second: string -> enum1 = "enum1_make_second"
external enum1_get_second_value: enum1 -> string array option = "enum1_get_second_value"
external enum1_is_empty: enum1 -> bool = "enum1_is_empty"
external struct1_empty: unit -> struct1 = "struct1_empty"
external struct1_get_c: struct1 -> string option = "struct1_get_c"
external struct1_get_d: struct1 -> string array option = "struct1_get_d"
external struct1_set_c: struct1 -> string -> struct1 = "struct1_set_c"
external make_struct1: int -> float -> string option -> string array option -> struct1 = "make_struct1"
external string_non_copying: string -> string = "string_non_copying"
external direct_slice: int64 array -> int64 = "direct_slice"
external deep_clone: 'a -> 'a = "deep_clone"
external pair_vec: unit -> (string * int) array = "pair_vec"
external string_array: unit -> string array = "string_array"
external array_conv: bytes -> bytes = "array_conv"
